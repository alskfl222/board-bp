// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  admin     Admin[]
  email     String  @unique
  name      String  
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]
  comments  Comment[]
}

model Board {
  id        Int     @id @default(autoincrement())
  name      String  @unique
  admin     Admin[]
  posts     Post[]
}

model Admin {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  boardId   Int
  board     Board    @relation(fields: [boardId], references: [id], onDelete: Cascade)
}

model Post {
  id        Int     @id @default(autoincrement())
  boardId   Int     
  board     Board   @relation(fields: [boardId], references: [id], onDelete: Cascade)
  authorId  Int
  author    User    @relation(fields: [authorId], references: [id], onDelete: Cascade)
  title     String
  content   String  @db.MediumText
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  comments  Comment[]
}

model Comment {
  id        Int     @id @default(autoincrement())
  authorId  Int
  author    User    @relation(fields: [authorId], references: [id], onDelete: Cascade)
  postId    Int
  post      Post    @relation(fields: [postId], references: [id], onDelete: Cascade)
  content   String  @db.MediumText
  parentId  Int?
  parent    Comment?   @relation("CommentToComment", fields: [parentId], references: [id])
  comments  Comment[]  @relation("CommentToComment")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}